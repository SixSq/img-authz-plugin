PLUGIN_NAME = sixsq/img-authz-plugin-test
PLUGIN_TAG ?= latest
BUILD_DIR = PLUGIN-TEST

all: clean rootfs create enable

clean:
	@echo " - Removing the local build cache ./${BUILD_DIR}"
	@rm -rf ./${BUILD_DIR}

rootfs:
	@echo " - Building the rootfs Docker image"
	@docker build -t ${PLUGIN_NAME}:rootfs .
	@echo " - Create rootfs folder at ./${BUILD_DIR}/rootfs"
	@mkdir -p ./${BUILD_DIR}/rootfs
	@echo " - Initialize container from ${PLUGIN_NAME}:rootfs"
	@docker create --name rootfs ${PLUGIN_NAME}:rootfs true
	@echo " - Exporting container filesystem into ./${BUILD_DIR}/rootfs"
	@docker export rootfs | tar -x -C ./${BUILD_DIR}/rootfs
	@echo " - Copying config.json to ./${BUILD_DIR}"
	@cp config.json ./${BUILD_DIR}/
	@echo " - Deleting build container rootfs"
	@docker rm -vf rootfs

create:
	@echo " - Removing existing plugin ${PLUGIN_NAME}:${PLUGIN_TAG} if exists"
	@docker plugin rm -f ${PLUGIN_NAME}:${PLUGIN_TAG} || true
	@echo " - Creating new plugin ${PLUGIN_NAME}:${PLUGIN_TAG} from ./${BUILD_DIR}"
	@docker plugin create ${PLUGIN_NAME}:${PLUGIN_TAG} ./${BUILD_DIR}

enable:		
	@echo " - Enabling the plugin ${PLUGIN_NAME}:${PLUGIN_TAG} locally"
	@docker plugin enable ${PLUGIN_NAME}:${PLUGIN_TAG}
